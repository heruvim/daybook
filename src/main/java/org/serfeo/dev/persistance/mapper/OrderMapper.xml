<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.serfeo.dev.persistance.mapper.OrderMapper">
    <resultMap id="BuyListMapper" type="BuyList">
        <result property="id" column="buyListId"/>
        <result property="date" column="date"/>
        <collection property="items" ofType="BuyListItem">
            <result property="name" column="name"/>
            <result property="countName" column="countName"/>
            <result property="count" column="count"/>
            <result property="price" column="price"/>
            <result property="comment" column="comment"/>
        </collection>
    </resultMap>

    <resultMap id="itemPriceStatMapper" type="ItemPriceStat">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="prices" ofType="ItemPrice">
            <result property="price" column="price"/>
            <result property="time" column="time"/>
        </collection>
    </resultMap>

    <select id="getBuyListById" resultMap="BuyListMapper">
        select * from
            ( select id as buyListId, date from orders where id=#{id} and userId=#{userId} ) orders
        LEFT JOIN
            ( select orderId, itemId, count from OrderItems where orderId=#{id} ) oi
            ON orders.buyListId = oi.orderId
        LEFT JOIN
            ( select id, name, countName, price, comment from Items where userId=#{userId} ) it
        ON oi.itemId = it.id
    </select>

    <insert id="insertOrderItem" parameterType="OrderItem">
        INSERT INTO `orderItems`( `count`, `itemId`, `orderId` )
        VALUES ( #{count}, #{itemId}, #{orderId} )
    </insert>

    <insert id="insertOrderData">
        <selectKey resultType="long" keyProperty="order.id" order="AFTER">
            SELECT `id` FROM `orders` WHERE `date`=#{order.date} AND `userId`=#{userId}
        </selectKey>
        INSERT INTO `orders`( `date`, `totalPrice`, `totalCount`, `userId` )
        VALUES ( #{order.date}, #{order.totalPrice}, #{order.totalCount}, #{userId} )
    </insert>

    <insert id="insertItem">
        <selectKey resultType="long" keyProperty="item.id" order="AFTER">
            SELECT `id` FROM `items` WHERE `name`=#{item.name} and `userId`=#{userId}
        </selectKey>
        INSERT INTO `items`( `name`, `countName`, `price`, `comment`, `userId` )
            VALUES ( #{item.name}, #{item.countName}, #{item.price}, #{item.comment}, #{userId} )
        ON DUPLICATE KEY UPDATE
            `name`=#{item.name},
            `countName`=#{item.countName},
            `price`=#{item.price},
            `comment`=#{item.comment},
            `userId`=#{userId}
    </insert>

    <delete id="deleteBuyListById">
        <!--DELETE Orders, OrderItems FROM
            Orders
        LEFT JOIN
            OrderItems
        ON orders.id = OrderItems.orderId
        WHERE orders.id = #{id}-->
        <!-- don't delete data -->
        UPDATE `Orders` SET `isDeleted`=1 WHERE `orders`.`id` = #{id} and `orders`.`userId` = #{userId}
    </delete>

    <delete id="deleteItemById">
        DELETE Items, OrderItems FROM
            Items
        LEFT JOIN
            OrderItems
        ON Items.id = OrderItems.itemId
        WHERE Items.id = #{id} and Items.userId = #{userId}
    </delete>

    <update id="updateItem" parameterType="Item">
        UPDATE Items
        SET `name`=#{item.name}, `countName`=#{item.countName}, `price`=#{item.price}, `comment`=#{item.comment}
        WHERE id=#{item.id} and userId=#{userId}
    </update>

    <select id="getItemStatByUserId" resultMap="itemPriceStatMapper">
        select `id`, `name`, `price`, `time` from
            ( select `id`, `name` from `items` where `userId`=#{userId} ) items
                JOIN
            ( select `itemId`, `price`, `time` from `item_price_stat` ) stats
                ON `items`.`id`=`stats`.`itemId`
        ORDER BY `time`
    </select>
</mapper>